name: Sync with integration-definitions
on: 
  push:
    branches: [master]
    paths:
    - 'otel-integration/k8s-helm/Chart.yaml'
  workflow_dispatch:
jobs:

  Get_vesrion:
    runs-on: ubuntu-latest
    name: Get the new version
    outputs:
      Chart_version: "${{ steps.New_version.outputs.Chart_version }}"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Get the new version
        id: New_version
        run: |
          Chart_version=$(cat ./otel-integration/k8s-helm/Chart.yaml | grep "^version" | grep -oE '[^ ]+$')
          echo "Chart_version=$Chart_version" >> $GITHUB_OUTPUT

  commit_changes:
    runs-on: ubuntu-latest
    needs: Get_vesrion
    steps:
      - name: Checkout destination repository
        uses: actions/checkout@v4
        with:
          repository: coralogix/integration-definitions
          token: ${{ secrets.GH_TOKEN }}

      - name: Check if version exists
        id: version_exist
        run: | 
          git fetch origin
          template_version=${{ needs.Get_vesrion.outputs.Chart_version }}
          if [ -d "./integrations/otel-agent-k8s/v$template_version" ]; then
            echo "version exist"
            echo "new_version_exist=true" >> $GITHUB_ENV
          else
            echo "new_version_exist=false" >> $GITHUB_ENV
            echo "version Not exist"
          fi

      - name: Create files for the new version
        if: "${{env.new_version_exist == 'false' || github.event_name == 'workflow_dispatch'}}"
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git checkout master
          git pull origin master
          git fetch origin

          current_time=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          template_version=${{ needs.Get_vesrion.outputs.Chart_version }}
          mkdir -p integrations/otel-agent-k8s/v${template_version}
          last_version=$(grep  "revision: " ./integrations/otel-agent-k8s/manifest.yaml | tail -n 1 | grep -oE '[^ ]+$')
          cp integrations/otel-agent-k8s/v$last_version/commands.yaml integrations/otel-agent-k8s/v${template_version}/
          cp integrations/otel-agent-k8s/v$last_version/fields.yaml integrations/otel-agent-k8s/v${template_version}/
          cp integrations/otel-agent-k8s/v$last_version/integration_guide.yaml integrations/otel-agent-k8s/v${template_version}/
          sed -i "s/--version=[^[:space:]]*/--version=$template_version/" integrations/otel-agent-k8s/v${template_version}/commands.yaml
          if [ -f ./integrations/otel-agent-k8s/manifest.yaml ]; then
            echo "  - revision: ${template_version}
              template:
                type: HelmChart
                commands: v${template_version}/commands.yaml
                integration_guide: v${template_version}/integration_guide.yaml
              field_definitions: v${template_version}/fields.yaml
              published_at: $current_time" >> integrations/otel-agent-k8s/manifest.yaml
          fi
          git add .

          merged_pr_from_telemetry_shipper=$(curl -s \
          "https://api.github.com/repos/coralogix/telemetry-shippers/pulls?state=closed&base=master&sort=updated&direction=desc" \
          | jq -r '.[0].title')
          if [ "${{ github.event_name }}" == 'workflow_dispatch' ] || [ -z "$merged_pr_from_telemetry_shipper" ]; then
            merged_pr_from_telemetry_shipper="sync-from-telemetry-shippers"
          fi
          echo "commit_message=$merged_pr_from_telemetry_shipper" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: commit change
        if: "${{env.new_version_exist == 'false' || github.event_name == 'workflow_dispatch'}}"
        uses: planetscale/ghcommit-action@v0.1.43
        with:
          commit_message: ${{env.commit_message}}
          repo: coralogix/integration-definitions
          branch: master
          file_pattern: '*.yaml *.md'
        env:
          GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
