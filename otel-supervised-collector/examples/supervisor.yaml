server:
  # endpoint: "https://ingress.eu2.coralogix.com/opamp/v1"
  endpoint: "http://host.docker.internal:4320/v1/opamp"
  headers:
    # This is a mocked token for testing purposes.
    X-Coralogix-Auth: "EgY0MjQyNDIiUApOCiRmZjhjODJmNi1iNzk2LTRhMWUtODkzMi0yMjBlMTc3MDBjMmUQBhokMzg2ZjA1ZjYtMWUyNS00ZmM0LWJhZjItNDgwZWQ5Yzk5NDJmQgkaBzEuMi4zLjQ="
  tls:
    insecure_skip_verify: true

capabilities:
  reports_effective_config: true
  reports_own_metrics: true
  reports_own_logs: true
  reports_own_traces: true
  reports_health: true
  accepts_remote_config: true
  reports_remote_config: true

agent:
  executable: /otelcol-contrib
  passthrough_logs: true

  # This passes config files to the Collector.
  config_files:
    - /etc/otelcol-contrib/config.yaml

  # This adds CLI arguments to the Collector.
  args: []

  # This adds env vars to the Collector process.
  env: {}

# The storage can be used for many things:
# - It stores configuration sent by the OpAMP server so that new collector
#   processes can start with the most known desired config.
storage:
  directory: /etc/otelcol-contrib/supervisor-data/

telemetry:
  logs:
    level: debug
