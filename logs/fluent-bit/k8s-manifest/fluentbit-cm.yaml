apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: fluent-bit-http
data:
  custom_parsers.conf: |
    [PARSER]
        Name docker_no_time
        Format json
        Time_Keep Off
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L

  fluent-bit.conf: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level ${LOG_LEVEL}
        Parsers_File parsers.conf
        Parsers_File custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On
        storage.metrics on
    [INPUT]
        Name tail
        Path /var/log/containers/*.log
        multiline.parser docker, cri
        Tag kube.*
        Refresh_Interval 5
        Skip_Long_Lines On
        Mem_Buf_Limit 25MB
        DB /var/log/fluentbit-tail.db

    @INCLUDE input-systemd.conf
    @INCLUDE input-fluentbit-metrics.conf
    
    [FILTER]
        Name kubernetes
        Match kube.*
        K8S-Logging.Parser On
        K8S-Logging.Exclude On
        Use_Kubelet On
        Annotations Off
        Labels On
        Buffer_Size 0
        Keep_Log Off
        Merge_Log_Key log_obj
        Merge_Log On

    [FILTER]
        Name        nest
        Match       kube.*
        Operation   nest
        Wildcard    *
        Nest_under  json

    [FILTER]
        Name    lua
        Match   kube.*
        script  /fluent-bit/scripts/script.lua
        call    addcrxmetadata
        time_as_table true

    @INCLUDE filters-systemd.conf
    [OUTPUT]
        Name                  http
        Match                 kube.*
        Host                  ${ENDPOINT}
        Port                  443
        URI                   /logs/rest/singles
        Format                json_lines
        TLS                   On
        Header                private_key ${PRIVATE_KEY}
        compress              gzip
        Retry_Limit           False
        net.keepalive         off

    @INCLUDE output-systemd.conf
    @INCLUDE output-fluentbit-metrics.conf

  filters-systemd.conf: |
    [FILTER]
      Name    modify
      Match   host.*
      Add    applicationName systemd
      Copy   SYSLOG_IDENTIFIER subsystemName

    [FILTER]
      Name        nest
      Match       host.*
      Operation   nest
      Wildcard    _HOSTNAME
      Wildcard    SYSLOG_IDENTIFIER
      Wildcard    _CMDLINE
      Wildcard    MESSAGE
      Nest_under  json

  input-fluentbit-metrics.conf: |-
    [INPUT]
      name            fluentbit_metrics
      tag             internal_metrics
      scrape_interval 5
      scrape_on_start true

  input-systemd.conf: |
    [INPUT]
      Name systemd
      Tag host.*
      Systemd_Filter _SYSTEMD_UNIT=kubelet.service
      Read_From_Tail On
      Mem_Buf_Limit 5MB

  output-systemd.conf: |
    [OUTPUT]
      Name                  http
      Match                 host.*
      Host                  ${ENDPOINT}
      Port                  443
      URI                   /logs/rest/singles
      Format                json_lines
      TLS                   On
      Header                private_key ${PRIVATE_KEY}
      compress              gzip
      Retry_Limit           False
      net.keepalive         off

  output-fluentbit-metrics.conf: |-
    [OUTPUT]
      name            prometheus_exporter
      match           internal_metrics
      host            0.0.0.0
      port            2021

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-http-crxluascript
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: fluent-bit-http
data:
  script.lua: |
      RETURN_WITHOUT_MODIFYING_TIMESTAMP = 2
      function addcrxmetadata(tag, timestamp, record)
          new_record = record

          if record.json and record.json.kubernetes then
              new_record["applicationName"] = record.json.kubernetes.namespace_name
              if new_record["applicationName"] == nil then
                  new_record["applicationName"] = "no-application"
              end

              new_record["subsystemName"] = record.json.kubernetes.container_name
              if new_record["subsystemName"] == nil then
                  new_record["subsystemName"] = "no-subsystem"
              end
          else
              new_record["applicationName"] = "no-application"
              new_record["subsystemName"] = "no-subsystem"
          end

          local processed_fraction = string.format("%09d", timestamp['nsec'])
          new_record["timestamp"] = string.format("%s%s", timestamp['sec'], string.sub(processed_fraction, 1, -4))
          return RETURN_WITHOUT_MODIFYING_TIMESTAMP, timestamp, new_record
      end