apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: fluent-bit-http
data:
  fluent-bit.yaml: |
    service:
      daemon: off
      flush: 1
      log_level: ${LOG_LEVEL}
      http_server: on
      http_listen: 0.0.0.0
      http_port: 2020
    pipeline:
      inputs:
        - name: fluentbit_metrics
          tag: metrics
          scrape_interval: 5
          scrape_on_start: true
        - name: tail
          tag: kube.*
          path: /var/log/containers/*.log
          multiline.parser: docker, cri
          refresh_interval: 5
          skip_long_lines: on
          mem_buf_limit: 25MB
          db: /var/log/fluentbit-tail.db
          processors:
            logs:
              - name: kubernetes
                "k8s-logging.parser": on
                "k8s-logging.exclude": on
                use_kubelet: On
                annotations: Off
                labels: On
                buffer_size: 100MB
                keep_log: Off
                merge_log_key: log_obj
                merge_log: On
                tls.verify: off

              - name: nest
                operation: nest
                wildcard:
                  - "*"
                nest_under: json

              - name: lua
                script: /fluent-bit/scripts/script.lua
                call: addcrxmetadata
                time_as_table: true

        - name: systemd
          tag: host.*
          systemd_filter: _SYSTEMD_UNIT=kubelet.service
          read_from_tail: on
          mem_buf_limit: 5MB
          processors:
            logs:
              - name: modify
                add:
                  - applicationName systemd
                copy:
                  - SYSLOG_IDENTIFIER subsystemName

              - name: nest
                operation: nest
                wildcard:
                  - _HOSTNAME
                  - SYSLOG_IDENTIFIER
                  - _CMDLINE
                  - MESSAGE
                nest_under: json

      outputs:
        - name: prometheus_exporter
          match: metrics
          host: 0.0.0.0
          port: 2021
        - name: http
          match_regex: ^(kube\..*|host\..*)$
          host: ${ENDPOINT}
          port: 443
          uri: /logs/v1/singles
          format: json_lines
          tls: on
          header: Authorization Bearer ${PRIVATE_KEY}
          compress: gzip
          retry_limit: false
          net.keepalive: off

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-http-crxluascript
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: fluent-bit-http
data:
  script.lua: |
      RETURN_WITHOUT_MODIFYING_TIMESTAMP = 2
      function addcrxmetadata(tag, timestamp, record)
          new_record = record

          if record.json and record.json.kubernetes then
              new_record["applicationName"] = record.json.kubernetes.namespace_name
              if new_record["applicationName"] == nil then
                  new_record["applicationName"] = "no-application"
              end

              new_record["subsystemName"] = record.json.kubernetes.container_name
              if new_record["subsystemName"] == nil then
                  new_record["subsystemName"] = "no-subsystem"
              end
          else
              new_record["applicationName"] = "no-application"
              new_record["subsystemName"] = "no-subsystem"
          end

          local processed_fraction = string.format("%09d", timestamp['nsec'])
          new_record["timestamp"] = string.format("%s%s", timestamp['sec'], string.sub(processed_fraction, 1, -4))
          return RETURN_WITHOUT_MODIFYING_TIMESTAMP, timestamp, new_record
      end
