<system>
  log_level "#{ENV['log_level']}"
</system>
<match log_router**>
  @type stdout
</match>
<match *-firelens-**>
  @type rewrite_tag_filter
  <rule>
    key $.container_name
    pattern ^(.+)$
    tag raw.$1.${tag}
  </rule>
</match>
<match raw.**>
  @id raw.containers
  @type detect_exceptions
  remove_tag_prefix raw
  message log
  stream container_id
  multiline_flush_interval 5
  max_bytes 500000
  max_lines 1000
</match>
<match **>
  @type relabel
  @label @CORALOGIX
</match>
<label @CORALOGIX>
<filter **>
  @type record_transformer
  enable_ruby true
  auto_typecast true
  renew_record true
  <record>
    privateKey "#{ENV['PRIVATE_KEY']}"
    applicationName ${ENV["APP_NAME"] || record["ecs_cluster"]}
    subsystemName ${ENV["SUB_SYSTEM"] || record["container_name"]}
    text ${record.to_json}
  </record>
</filter>
 <match **>
  @type http
    endpoint "https://#{ENV['ENDPOINT']}/logs/rest/singles"
    headers_from_placeholders {"private_key":"${$.privateKey}"}
    error_response_as_unrecoverable false
    retryable_response_codes 503
    <buffer $.privateKey>
      @type memory
      compress gzip
      flush_thread_count 4
      chunk_limit_size 6MB
      flush_interval 1s
      overflow_action throw_exception
      retry_max_times 10
      retry_type periodic
      retry_wait 8
    </buffer>
</match>
</label>
<label @FLUENT_LOG>
  <match fluent.*>
    @type stdout
  </match>
</label>