fullnameOverride: prometheus-agent

global:
  rbac:
    create: true

prometheus:
  service:
    labels: {}
    annotations: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    type: ClusterIP
    externalTrafficPolicy: Cluster
    port: 9090
    targetPort: 9090
    nodePort: 30090
    publishNotReadyAddresses: false
    sessionAffinity: ""

  prometheusSpec:
    portName: "http-web"
    routePrefix: /
    startupProbe:
      failureThreshold: 60
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 3
    enableFeatures:
      - memory-snapshot-on-shutdown
      - new-service-discovery-manager
    image: 
      repository: quay.io/prometheus/prometheus
      tag: v2.43.0-stringlabels
    enableAdminAPI: true
    logFormat: json
    logLevel: warn
    scrapeInterval: 30s
    remoteWrite:
    - authorization:
        credentials:
          name: coralogix-keys
          key: PRIVATE_KEY
      name: prometheus-agent-coralogix
      queueConfig:
        capacity: 2500
        maxSamplesPerSend: 500
        maxShards: 200
      remoteTimeout: 120s
      url: https://ingress.coralogix.com/prometheus/v1
    replicaExternalLabelName: "prometheus_replica"
    replicas: 1
    shards: 1
    securityContext:
      fsGroup: 2000
      runAsGroup: 2000
      runAsNonRoot: true
      runAsUser: 1000
    resources:
      requests:
        cpu: "0.3"
        memory: 500Mi
    serviceMonitorNamespaceSelector: {}
    ## Example which selects ServiceMonitors in namespaces with label "prometheus" set to "somelabel"
    # serviceMonitorNamespaceSelector:
    #   matchLabels:
    #     prometheus: somelabel
    serviceMonitorSelector: {}
    ## Example which selects ServiceMonitors with label "prometheus" set to "somelabel"
    # serviceMonitorSelector:
    #   matchLabels:
    #     prometheus: somelabel
    podMonitorNamespaceSelector: {}
    podMonitorSelector: {}
    storageSpec: {}
    #  volumeClaimTemplate:
    #    metadata:
    #      labels:
    #        prometheus: coralogix
    #    spec:
    #      accessModes: ["ReadWriteOnce"]
    #      resources:
    #        requests:
    #          storage: 50Gi
    #    selector: {}
    externalLabels: {}
  serviceAccount:
    create: true
  serviceMonitor:
    interval: ""
    labels: {}
    selfMonitor: true
    sampleLimit: 0
    targetLimit: 0
    labelLimit: 0
    labelNameLengthLimit: 0
    labelValueLengthLimit: 0
    scheme: ""
    tlsConfig: {}
    bearerTokenFile:
    metricRelabelings: []
    relabelings: []

